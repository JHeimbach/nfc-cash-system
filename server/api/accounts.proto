syntax = "proto3";

package api;

import "globals.proto";
import "groups.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

service AccountService {
    rpc ListAccounts (ListAccountsRequest) returns (ListAccountsResponse) {
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            operation_id: "List all accounts"
            description: "Returns all account, can be limited with paged options and filtered by group"
        };
        option (google.api.http) = {
            get: "/v1/accounts"
        };
    };
    rpc CreateAccount (CreateAccountRequest) returns (Account) {
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            operation_id: "Create account"
            description: "Creates new account"
        };
        option (google.api.http) = {
            post: "/v1/accounts"
            body: "*"
        };
    };
    rpc GetAccount (GetAccountRequest) returns (Account) {
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            operation_id: "Get account"
            description: "Returns single account with given id"
        };
        option (google.api.http) = {
            get: "/v1/account/{id}"
        };
    };
    rpc UpdateAccount (Account) returns (Account) {
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            operation_id: "Update account"
            description: "Updates account with given id, all fields must be send"
        };
        option (google.api.http) = {
            put: "/v1/account/{id}"
            body: "*"
        };
    };
    rpc DeleteAccount (DeleteAccountRequest) returns (google.protobuf.Empty) {
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            operation_id: "Delete account"
            description: "Deletes account with given id"
        };
        option (google.api.http) = {
            delete: "/v1/account/{id}"
        };
    };
}

message ListAccountsRequest {
    int32 group_filter = 1;
    Paging paging = 2;
}

message ListAccountsResponse {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {title:"Accounts"}
    };
    repeated Account accounts = 1;
    int32 total_count = 2;
}

message Account {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {title:"Account"}
    };
    int32 id = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "Account ID"}];
    string name = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "Account name"}];
    string description = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "Account description"}];
    double saldo = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "Account Saldo"}];
    string nfc_chip_id = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "Account Nfc Chip Uuid"}];
    Group group = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "Account Group"}];
}

message CreateAccountRequest {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {title:"AccountCreation"} };
    string name = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "Account name"}];
    string description = 3 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "Account description"}];
    double saldo = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "Account Startsaldo"}];
    string nfc_chip_id = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "Account Nfc Chip Uuid"}];
    int32 group_id = 6 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {title: "Account Group ID"}];
}

message GetAccountRequest {
    int32 id = 1;
}

message DeleteAccountRequest {
    int32 id = 1;
}