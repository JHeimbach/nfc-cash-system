{
  "swagger": "2.0",
  "info": {
    "title": "NFC Cash System",
    "version": "1.0",
    "contact": {
      "name": "Johannes Heimbach",
      "url": "https://github.com/jheimbach/nfc-cash-system",
      "email": "nfccashsystem@medienstalt.de"
    }
  },
  "host": "nfc-cash.evjp.de",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/account/{account_id}/transactions": {
      "get": {
        "description": "Lists all Transactions for given account, can be limited with paging options",
        "operationId": "List transactions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListTransactionsResponse"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paging.limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paging.offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TransactionsService"
        ],
        "security": [
          {
            "TokenAuth": []
          }
        ]
      },
      "post": {
        "description": "Creates new transaction",
        "operationId": "Create transaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiTransaction"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiCreateTransactionRequest"
            }
          }
        ],
        "tags": [
          "TransactionsService"
        ],
        "security": [
          {
            "TokenAuth": []
          }
        ]
      }
    },
    "/v1/account/{account_id}/transactions/{id}": {
      "get": {
        "description": "Returns single transaction",
        "operationId": "Get transaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiTransaction"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "TransactionsService"
        ],
        "security": [
          {
            "TokenAuth": []
          }
        ]
      }
    },
    "/v1/account/{id}": {
      "get": {
        "description": "Returns single account with given id",
        "operationId": "Get account",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiAccount"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "AccountService"
        ],
        "security": [
          {
            "TokenAuth": []
          }
        ]
      },
      "delete": {
        "description": "Deletes account with given id",
        "operationId": "Delete account",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "AccountService"
        ],
        "security": [
          {
            "TokenAuth": []
          }
        ]
      },
      "put": {
        "description": "Updates account with given id, all fields must be send",
        "operationId": "Update account",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiAccount"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiAccount"
            }
          }
        ],
        "tags": [
          "AccountService"
        ],
        "security": [
          {
            "TokenAuth": []
          }
        ]
      }
    },
    "/v1/accounts": {
      "get": {
        "description": "Returns all account, can be limited with paged options and filtered by group",
        "operationId": "List all accounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListAccountsResponse"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "group_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paging.limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paging.offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "AccountService"
        ],
        "security": [
          {
            "TokenAuth": []
          }
        ]
      },
      "post": {
        "description": "Creates new account",
        "operationId": "Create account",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiAccount"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiCreateAccountRequest"
            }
          }
        ],
        "tags": [
          "AccountService"
        ],
        "security": [
          {
            "TokenAuth": []
          }
        ]
      }
    },
    "/v1/group/{id}": {
      "get": {
        "description": "Returns single group with given id",
        "operationId": "Get group",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGroup"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "GroupsService"
        ],
        "security": [
          {
            "TokenAuth": []
          }
        ]
      },
      "delete": {
        "description": "Deletes group with given id",
        "operationId": "Delete group",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "GroupsService"
        ],
        "security": [
          {
            "TokenAuth": []
          }
        ]
      },
      "put": {
        "description": "Updates group, all fields must be send",
        "operationId": "Update group",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGroup"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiGroup"
            }
          }
        ],
        "tags": [
          "GroupsService"
        ],
        "security": [
          {
            "TokenAuth": []
          }
        ]
      }
    },
    "/v1/groups": {
      "get": {
        "description": "Lists all groups, can be limited with paging options",
        "operationId": "List groups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListGroupsResponse"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "paging.limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paging.offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "GroupsService"
        ],
        "security": [
          {
            "TokenAuth": []
          }
        ]
      },
      "post": {
        "description": "Creates group",
        "operationId": "Create group",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGroup"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiCreateGroupRequest"
            }
          }
        ],
        "tags": [
          "GroupsService"
        ],
        "security": [
          {
            "TokenAuth": []
          }
        ]
      }
    },
    "/v1/transactions": {
      "get": {
        "description": "Lists all transactions, can be limited with paging options",
        "operationId": "List all transactions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListTransactionsResponse"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "paging.limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paging.offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "TransactionsService"
        ],
        "security": [
          {
            "TokenAuth": []
          }
        ]
      }
    },
    "/v1/user/login": {
      "get": {
        "description": "Returns JWT Tokens for authentication",
        "operationId": "Login User",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiAuthenticateResponse"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "tags": [
          "UserService"
        ],
        "security": [
          {
            "BasicAuth": []
          }
        ]
      }
    },
    "/v1/user/logout": {
      "post": {
        "operationId": "Logout User",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {}
            }
          }
        ],
        "tags": [
          "UserService"
        ],
        "security": [
          {
            "TokenAuth": []
          }
        ]
      }
    },
    "/v1/user/refresh": {
      "post": {
        "operationId": "Refresh Access Token",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiAuthenticateResponse"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to access the resource.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/apiStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {}
            }
          }
        ],
        "tags": [
          "UserService"
        ],
        "security": [
          {
            "TokenAuth": []
          }
        ],
        "x-refresh-token": "\u003crefresh_token\u003e"
      }
    }
  },
  "definitions": {
    "AuthenticateResponseTokenType": {
      "type": "string",
      "enum": [
        "BEARER"
      ],
      "default": "BEARER"
    },
    "apiAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "Account ID"
        },
        "name": {
          "type": "string",
          "title": "Account name"
        },
        "description": {
          "type": "string",
          "title": "Account description"
        },
        "saldo": {
          "type": "number",
          "format": "double",
          "title": "Account Saldo"
        },
        "nfc_chip_id": {
          "type": "string",
          "title": "Account Nfc Chip Uuid"
        },
        "group": {
          "$ref": "#/definitions/apiGroup",
          "title": "Account Group"
        }
      },
      "title": "Account"
    },
    "apiAuthenticateResponse": {
      "type": "object",
      "properties": {
        "token_type": {
          "$ref": "#/definitions/AuthenticateResponseTokenType"
        },
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        },
        "expires_in": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "apiCreateAccountRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Account name"
        },
        "description": {
          "type": "string",
          "title": "Account description"
        },
        "saldo": {
          "type": "number",
          "format": "double",
          "title": "Account Startsaldo"
        },
        "nfc_chip_id": {
          "type": "string",
          "title": "Account Nfc Chip Uuid"
        },
        "group_id": {
          "type": "integer",
          "format": "int32",
          "title": "Account Group ID"
        }
      },
      "title": "AccountCreation"
    },
    "apiCreateGroupRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "can_overdraw": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "GroupCreation"
    },
    "apiCreateTransactionRequest": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "double"
        },
        "account_id": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "TransactionCreation"
    },
    "apiGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "can_overdraw": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "Group"
    },
    "apiListAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiAccount"
          }
        },
        "total_count": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Accounts"
    },
    "apiListGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiGroup"
          }
        },
        "total_count": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Groups"
    },
    "apiListTransactionsResponse": {
      "type": "object",
      "properties": {
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiTransaction"
          }
        },
        "total_count": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Transactions"
    },
    "apiPaging": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "PagingOptions"
    },
    "apiStatus": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "Status"
    },
    "apiTransaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "old_saldo": {
          "type": "number",
          "format": "double"
        },
        "new_saldo": {
          "type": "number",
          "format": "double"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "account": {
          "$ref": "#/definitions/apiAccount"
        }
      },
      "title": "Transaction"
    }
  },
  "securityDefinitions": {
    "BasicAuth": {
      "type": "basic"
    },
    "TokenAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}
