// Code generated by protoc-gen-go. DO NOT EDIT.
// source: groups.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListGroupsRequest struct {
	Paging               *Paging  `protobuf:"bytes,1,opt,name=paging,proto3" json:"paging,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListGroupsRequest) Reset()         { *m = ListGroupsRequest{} }
func (m *ListGroupsRequest) String() string { return proto.CompactTextString(m) }
func (*ListGroupsRequest) ProtoMessage()    {}
func (*ListGroupsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6616980d7c5e2870, []int{0}
}

func (m *ListGroupsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListGroupsRequest.Unmarshal(m, b)
}
func (m *ListGroupsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListGroupsRequest.Marshal(b, m, deterministic)
}
func (m *ListGroupsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListGroupsRequest.Merge(m, src)
}
func (m *ListGroupsRequest) XXX_Size() int {
	return xxx_messageInfo_ListGroupsRequest.Size(m)
}
func (m *ListGroupsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListGroupsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListGroupsRequest proto.InternalMessageInfo

func (m *ListGroupsRequest) GetPaging() *Paging {
	if m != nil {
		return m.Paging
	}
	return nil
}

type CreateGroupRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CanOverdraw          bool     `protobuf:"varint,3,opt,name=can_overdraw,json=canOverdraw,proto3" json:"can_overdraw,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateGroupRequest) Reset()         { *m = CreateGroupRequest{} }
func (m *CreateGroupRequest) String() string { return proto.CompactTextString(m) }
func (*CreateGroupRequest) ProtoMessage()    {}
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6616980d7c5e2870, []int{1}
}

func (m *CreateGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateGroupRequest.Unmarshal(m, b)
}
func (m *CreateGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateGroupRequest.Marshal(b, m, deterministic)
}
func (m *CreateGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateGroupRequest.Merge(m, src)
}
func (m *CreateGroupRequest) XXX_Size() int {
	return xxx_messageInfo_CreateGroupRequest.Size(m)
}
func (m *CreateGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateGroupRequest proto.InternalMessageInfo

func (m *CreateGroupRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateGroupRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateGroupRequest) GetCanOverdraw() bool {
	if m != nil {
		return m.CanOverdraw
	}
	return false
}

type GetGroupRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGroupRequest) Reset()         { *m = GetGroupRequest{} }
func (m *GetGroupRequest) String() string { return proto.CompactTextString(m) }
func (*GetGroupRequest) ProtoMessage()    {}
func (*GetGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6616980d7c5e2870, []int{2}
}

func (m *GetGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGroupRequest.Unmarshal(m, b)
}
func (m *GetGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGroupRequest.Marshal(b, m, deterministic)
}
func (m *GetGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGroupRequest.Merge(m, src)
}
func (m *GetGroupRequest) XXX_Size() int {
	return xxx_messageInfo_GetGroupRequest.Size(m)
}
func (m *GetGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGroupRequest proto.InternalMessageInfo

func (m *GetGroupRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteGroupRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteGroupRequest) Reset()         { *m = DeleteGroupRequest{} }
func (m *DeleteGroupRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteGroupRequest) ProtoMessage()    {}
func (*DeleteGroupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6616980d7c5e2870, []int{3}
}

func (m *DeleteGroupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteGroupRequest.Unmarshal(m, b)
}
func (m *DeleteGroupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteGroupRequest.Marshal(b, m, deterministic)
}
func (m *DeleteGroupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteGroupRequest.Merge(m, src)
}
func (m *DeleteGroupRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteGroupRequest.Size(m)
}
func (m *DeleteGroupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteGroupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteGroupRequest proto.InternalMessageInfo

func (m *DeleteGroupRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListGroupsResponse struct {
	Groups               []*Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	TotalCount           int32    `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListGroupsResponse) Reset()         { *m = ListGroupsResponse{} }
func (m *ListGroupsResponse) String() string { return proto.CompactTextString(m) }
func (*ListGroupsResponse) ProtoMessage()    {}
func (*ListGroupsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6616980d7c5e2870, []int{4}
}

func (m *ListGroupsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListGroupsResponse.Unmarshal(m, b)
}
func (m *ListGroupsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListGroupsResponse.Marshal(b, m, deterministic)
}
func (m *ListGroupsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListGroupsResponse.Merge(m, src)
}
func (m *ListGroupsResponse) XXX_Size() int {
	return xxx_messageInfo_ListGroupsResponse.Size(m)
}
func (m *ListGroupsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListGroupsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListGroupsResponse proto.InternalMessageInfo

func (m *ListGroupsResponse) GetGroups() []*Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *ListGroupsResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type Group struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CanOverdraw          bool     `protobuf:"varint,4,opt,name=can_overdraw,json=canOverdraw,proto3" json:"can_overdraw,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_6616980d7c5e2870, []int{5}
}

func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (m *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(m, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Group) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Group) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Group) GetCanOverdraw() bool {
	if m != nil {
		return m.CanOverdraw
	}
	return false
}

func init() {
	proto.RegisterType((*ListGroupsRequest)(nil), "api.ListGroupsRequest")
	proto.RegisterType((*CreateGroupRequest)(nil), "api.CreateGroupRequest")
	proto.RegisterType((*GetGroupRequest)(nil), "api.GetGroupRequest")
	proto.RegisterType((*DeleteGroupRequest)(nil), "api.DeleteGroupRequest")
	proto.RegisterType((*ListGroupsResponse)(nil), "api.ListGroupsResponse")
	proto.RegisterType((*Group)(nil), "api.Group")
}

func init() { proto.RegisterFile("groups.proto", fileDescriptor_6616980d7c5e2870) }

var fileDescriptor_6616980d7c5e2870 = []byte{
	// 628 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0x95, 0x93, 0x36, 0xb4, 0xd7, 0x49, 0x4b, 0x87, 0xaa, 0x44, 0x06, 0xc4, 0xd4, 0x20, 0x54,
	0x59, 0x6d, 0x2c, 0xca, 0x43, 0xa8, 0x3b, 0xab, 0xa0, 0xb2, 0x40, 0x02, 0x19, 0x81, 0xd8, 0x55,
	0x13, 0xfb, 0xd6, 0x1d, 0xc9, 0x99, 0x31, 0x9e, 0x49, 0xaa, 0x0a, 0xc1, 0x02, 0xfe, 0xc0, 0x2c,
	0xf8, 0x30, 0x3e, 0x80, 0x0d, 0x1f, 0x82, 0x32, 0xe3, 0x14, 0x27, 0x11, 0x62, 0x65, 0xcf, 0x7d,
	0x9d, 0x7b, 0x8e, 0x8f, 0x07, 0xba, 0x59, 0x29, 0xc7, 0x85, 0x1a, 0x14, 0xa5, 0xd4, 0x92, 0xb4,
	0x59, 0xc1, 0xbd, 0x5e, 0x96, 0xcb, 0x21, 0xcb, 0xeb, 0x98, 0x77, 0x2b, 0x93, 0x32, 0xcb, 0x31,
	0x34, 0xa7, 0xe1, 0xf8, 0x2c, 0xc4, 0x51, 0xa1, 0x2f, 0xeb, 0xe4, 0xed, 0x3a, 0xc9, 0x0a, 0x1e,
	0x32, 0x21, 0xa4, 0x66, 0x9a, 0x4b, 0x31, 0x6b, 0xdd, 0x37, 0x8f, 0xe4, 0x20, 0x43, 0x71, 0xa0,
	0x2e, 0x58, 0x96, 0x61, 0x19, 0xca, 0xc2, 0x54, 0x2c, 0x57, 0xfb, 0xcf, 0x60, 0xeb, 0x15, 0x57,
	0xfa, 0xc4, 0x2c, 0x14, 0xe3, 0xc7, 0x31, 0x2a, 0x4d, 0xee, 0x41, 0xa7, 0x60, 0x19, 0x17, 0x59,
	0xdf, 0xa1, 0xce, 0x9e, 0x7b, 0xe8, 0x0e, 0x58, 0xc1, 0x07, 0x6f, 0x4c, 0x28, 0xae, 0x53, 0xfe,
	0x37, 0x07, 0xc8, 0x71, 0x89, 0x4c, 0xa3, 0x69, 0x9e, 0xf5, 0x12, 0x58, 0x11, 0x6c, 0x84, 0xa6,
	0x73, 0x3d, 0x36, 0xef, 0x84, 0x82, 0x9b, 0xa2, 0x4a, 0x4a, 0x6e, 0xd6, 0xe8, 0xb7, 0x4c, 0xaa,
	0x19, 0x22, 0xbb, 0xd0, 0x4d, 0x98, 0x38, 0x95, 0x13, 0x2c, 0xd3, 0x92, 0x5d, 0xf4, 0xdb, 0xd4,
	0xd9, 0x5b, 0x8b, 0xdd, 0x84, 0x89, 0xd7, 0x75, 0xe8, 0x68, 0xbb, 0x8a, 0xb6, 0x60, 0x33, 0xe8,
	0x19, 0x34, 0x03, 0xcc, 0xa5, 0xf0, 0x77, 0x61, 0xf3, 0x04, 0xf5, 0xdc, 0x06, 0x1b, 0xd0, 0xe2,
	0xa9, 0xc1, 0x5f, 0x8d, 0x5b, 0x3c, 0xf5, 0xef, 0x03, 0x79, 0x8e, 0x39, 0x2e, 0xec, 0xb9, 0x58,
	0x75, 0x0e, 0xa4, 0x29, 0x84, 0x2a, 0xa4, 0x50, 0x48, 0x7c, 0xe8, 0xd8, 0x6f, 0xd5, 0x77, 0x68,
	0x7b, 0xcf, 0x3d, 0x04, 0xa3, 0x84, 0x1d, 0x54, 0x67, 0xc8, 0x5d, 0x70, 0xb5, 0xd4, 0x2c, 0x3f,
	0x4d, 0xe4, 0x58, 0x68, 0xc3, 0x6e, 0x35, 0x06, 0x13, 0x3a, 0x9e, 0x46, 0x8e, 0x7a, 0x55, 0x04,
	0xb0, 0x16, 0x74, 0xec, 0x6c, 0xff, 0x0b, 0xac, 0x9a, 0xb7, 0xc5, 0x15, 0xae, 0xa4, 0x6b, 0xfd,
	0x5b, 0xba, 0xf6, 0xff, 0xa5, 0x5b, 0x59, 0x96, 0xae, 0x5b, 0x45, 0xeb, 0x70, 0x2d, 0xb0, 0xb0,
	0x87, 0xbf, 0x56, 0xc0, 0x8a, 0xa8, 0xde, 0x62, 0x39, 0xe1, 0x09, 0x92, 0x1f, 0x0e, 0xc0, 0x5f,
	0xf2, 0x64, 0xc7, 0x90, 0x5c, 0xb2, 0x85, 0x77, 0x73, 0x29, 0x6e, 0x55, 0xf2, 0x3f, 0x54, 0xd1,
	0xb1, 0xf7, 0x78, 0x9a, 0x50, 0x94, 0xe5, 0x39, 0xb5, 0xc2, 0xec, 0xd3, 0x84, 0x09, 0x3a, 0x44,
	0x9a, 0xf3, 0x11, 0xd7, 0x98, 0xd2, 0x0b, 0xae, 0xcf, 0xa9, 0x75, 0x0f, 0xad, 0x1d, 0x19, 0xb8,
	0xd3, 0xae, 0xba, 0xe1, 0xeb, 0xcf, 0xdf, 0xdf, 0x5b, 0x5d, 0x02, 0xe1, 0xe4, 0x61, 0x58, 0x6b,
	0xcb, 0xc1, 0x6d, 0x78, 0x8c, 0xd8, 0x0d, 0x96, 0x5d, 0xe7, 0x35, 0xbe, 0x8b, 0xff, 0xa4, 0x8a,
	0xee, 0x78, 0x3d, 0x5b, 0xa4, 0xec, 0xe8, 0xa0, 0x6b, 0x8f, 0xf6, 0x64, 0x70, 0x36, 0xfd, 0x06,
	0xce, 0x91, 0x13, 0x90, 0x09, 0xac, 0xcd, 0x9c, 0x44, 0xb6, 0xed, 0xb8, 0x79, 0x63, 0xcd, 0x81,
	0xbc, 0xac, 0xa2, 0xd0, 0xf3, 0x63, 0xd4, 0xe3, 0x52, 0x28, 0xaa, 0xb8, 0xc8, 0xf2, 0x7a, 0xba,
	0xa5, 0x99, 0xf1, 0x09, 0x0a, 0xca, 0xd3, 0x60, 0xfd, 0x04, 0x75, 0x03, 0xf6, 0x3a, 0xd9, 0xb8,
	0x82, 0x0d, 0x3f, 0xf1, 0xf4, 0x33, 0xb9, 0x04, 0xf7, 0x5d, 0x91, 0x5e, 0x51, 0x6c, 0x80, 0xcc,
	0x01, 0xc6, 0x55, 0xf4, 0xd4, 0x7b, 0x60, 0x2b, 0x6b, 0x56, 0xfb, 0x46, 0xec, 0x33, 0x8e, 0x79,
	0xaa, 0xe8, 0x68, 0xac, 0xf4, 0x54, 0x6c, 0x85, 0x22, 0x0d, 0xba, 0xb6, 0xae, 0x81, 0x7b, 0xc3,
	0x5b, 0xc0, 0x9d, 0x52, 0x7e, 0x0f, 0x6e, 0xe3, 0xcf, 0xa8, 0xd5, 0x5d, 0xfe, 0x57, 0xbc, 0x9d,
	0x81, 0xbd, 0x71, 0x06, 0xb3, 0xeb, 0x68, 0xf0, 0x62, 0x7a, 0x1d, 0xf9, 0x3b, 0x96, 0x52, 0xb0,
	0x30, 0x7a, 0xd8, 0x31, 0x75, 0x8f, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0xd7, 0x0f, 0xad, 0x7a,
	0xe8, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GroupsServiceClient is the client API for GroupsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GroupsServiceClient interface {
	ListGroups(ctx context.Context, in *ListGroupsRequest, opts ...grpc.CallOption) (*ListGroupsResponse, error)
	CreateGroup(ctx context.Context, in *CreateGroupRequest, opts ...grpc.CallOption) (*Group, error)
	GetGroup(ctx context.Context, in *GetGroupRequest, opts ...grpc.CallOption) (*Group, error)
	UpdateGroup(ctx context.Context, in *Group, opts ...grpc.CallOption) (*Group, error)
	DeleteGroup(ctx context.Context, in *DeleteGroupRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type groupsServiceClient struct {
	cc *grpc.ClientConn
}

func NewGroupsServiceClient(cc *grpc.ClientConn) GroupsServiceClient {
	return &groupsServiceClient{cc}
}

func (c *groupsServiceClient) ListGroups(ctx context.Context, in *ListGroupsRequest, opts ...grpc.CallOption) (*ListGroupsResponse, error) {
	out := new(ListGroupsResponse)
	err := c.cc.Invoke(ctx, "/api.GroupsService/ListGroups", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupsServiceClient) CreateGroup(ctx context.Context, in *CreateGroupRequest, opts ...grpc.CallOption) (*Group, error) {
	out := new(Group)
	err := c.cc.Invoke(ctx, "/api.GroupsService/CreateGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupsServiceClient) GetGroup(ctx context.Context, in *GetGroupRequest, opts ...grpc.CallOption) (*Group, error) {
	out := new(Group)
	err := c.cc.Invoke(ctx, "/api.GroupsService/GetGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupsServiceClient) UpdateGroup(ctx context.Context, in *Group, opts ...grpc.CallOption) (*Group, error) {
	out := new(Group)
	err := c.cc.Invoke(ctx, "/api.GroupsService/UpdateGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *groupsServiceClient) DeleteGroup(ctx context.Context, in *DeleteGroupRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/api.GroupsService/DeleteGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GroupsServiceServer is the server API for GroupsService service.
type GroupsServiceServer interface {
	ListGroups(context.Context, *ListGroupsRequest) (*ListGroupsResponse, error)
	CreateGroup(context.Context, *CreateGroupRequest) (*Group, error)
	GetGroup(context.Context, *GetGroupRequest) (*Group, error)
	UpdateGroup(context.Context, *Group) (*Group, error)
	DeleteGroup(context.Context, *DeleteGroupRequest) (*empty.Empty, error)
}

// UnimplementedGroupsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGroupsServiceServer struct {
}

func (*UnimplementedGroupsServiceServer) ListGroups(ctx context.Context, req *ListGroupsRequest) (*ListGroupsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGroups not implemented")
}
func (*UnimplementedGroupsServiceServer) CreateGroup(ctx context.Context, req *CreateGroupRequest) (*Group, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGroup not implemented")
}
func (*UnimplementedGroupsServiceServer) GetGroup(ctx context.Context, req *GetGroupRequest) (*Group, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroup not implemented")
}
func (*UnimplementedGroupsServiceServer) UpdateGroup(ctx context.Context, req *Group) (*Group, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGroup not implemented")
}
func (*UnimplementedGroupsServiceServer) DeleteGroup(ctx context.Context, req *DeleteGroupRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGroup not implemented")
}

func RegisterGroupsServiceServer(s *grpc.Server, srv GroupsServiceServer) {
	s.RegisterService(&_GroupsService_serviceDesc, srv)
}

func _GroupsService_ListGroups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListGroupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupsServiceServer).ListGroups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GroupsService/ListGroups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupsServiceServer).ListGroups(ctx, req.(*ListGroupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupsService_CreateGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupsServiceServer).CreateGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GroupsService/CreateGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupsServiceServer).CreateGroup(ctx, req.(*CreateGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupsService_GetGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupsServiceServer).GetGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GroupsService/GetGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupsServiceServer).GetGroup(ctx, req.(*GetGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupsService_UpdateGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Group)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupsServiceServer).UpdateGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GroupsService/UpdateGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupsServiceServer).UpdateGroup(ctx, req.(*Group))
	}
	return interceptor(ctx, in, info, handler)
}

func _GroupsService_DeleteGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GroupsServiceServer).DeleteGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GroupsService/DeleteGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GroupsServiceServer).DeleteGroup(ctx, req.(*DeleteGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GroupsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.GroupsService",
	HandlerType: (*GroupsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListGroups",
			Handler:    _GroupsService_ListGroups_Handler,
		},
		{
			MethodName: "CreateGroup",
			Handler:    _GroupsService_CreateGroup_Handler,
		},
		{
			MethodName: "GetGroup",
			Handler:    _GroupsService_GetGroup_Handler,
		},
		{
			MethodName: "UpdateGroup",
			Handler:    _GroupsService_UpdateGroup_Handler,
		},
		{
			MethodName: "DeleteGroup",
			Handler:    _GroupsService_DeleteGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "groups.proto",
}
